workspace(name = "up_and_running")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Go rules

http_archive(
    name = "io_bazel_rules_go",
    sha256 = "2b1641428dff9018f9e85c0384f03ec6c10660d935b750e3fa1492a281a53b0f",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.29.0/rules_go-v0.29.0.zip",
        "https://github.com/bazelbuild/rules_go/releases/download/v0.29.0/rules_go-v0.29.0.zip",
    ],
)

load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")

go_rules_dependencies()

go_register_toolchains(
    version = "1.17.4",  # Defaults to latest
)

# Gazelle is a tool for auto-creating BUILD.bazel files for Go
# projects ("bazel run //:gazelle"). It provides a "happy path"
# for Go projects - the BUILD files you see here were generated
# by Gazelle, not by hand.

http_archive(
    name = "bazel_gazelle",
    sha256 = "de69a09dc70417580aabf20a28619bb3ef60d038470c7cf8442fafcf627c21cb",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.24.0/bazel-gazelle-v0.24.0.tar.gz",
        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.24.0/bazel-gazelle-v0.24.0.tar.gz",
    ],
)

# tip to see exactly what Go is installed and how it is configured:
# bazel build @io_bazel_rules_go//:go_info
# cat bazel-bin/external/io_bazel_rules_go/go_info.txt
# Compare to the output of "go version"

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies", "go_repository")

gazelle_dependencies()

# Dependencies

# tip: to update a dependency to current published version
# bazel run //:gazelle -- update-repos github.com/mattn/go-slim

go_repository(
    name = "com_github_mattn_go_slim",
    importpath = "github.com/mattn/go-slim",
    sum = "h1:uqQiE8NnkaO56o++gpH/TneRCq1YfdPMngZii+xgofw=",
    version = "v0.0.0-20210920161928-d6681e434570",
)

# From the rules_go documentation:

# "Note that go build won't be aware of dependencies listed in WORKSPACE,
# so you may want to download your dependencies into your GOPATH or module
# cache so that your tools are aware of them. You may also need to check
# in generated files."

# Thus: go get github.com/mattn/go-slim
