load("@rules_java//java:defs.bzl", "java_binary", "java_library", "java_test")

package(default_visibility = ["//visibility:public"])

# Upcoming Bazel v5 / v6 has a much improved way to manage multiple
# JDK versions:

# https://docs.bazel.build/versions/main/user-manual.html#flag--java_runtime_version

alias(
    name = "jdk",
    actual = select(
        {
            "@bazel_tools//src/conditions:darwin_x86_64": "@jdk15_macos//:jdk",
            "@bazel_tools//src/conditions:linux_x86_64": "@jdk15_linux//:jdk",
            "@bazel_tools//src/conditions:windows": "@jdk15_windows//:jdk",
        },
        no_match_error = "Could not find a JDK for host execution environment, please explicitly" +
                         " provide one using `--host_javabase.`",
    ),
)

java_binary(
    name = "hello-world",
    args = ["world"],
    main_class = "com.example.myproject.Greeter",
    runtime_deps = [":hello-lib"],
)

java_binary(
    name = "hello-worlds",
    args = [
        "world",
        "world",
        "world",
    ],
    main_class = "com.example.myproject.Greeter",
    runtime_deps = [":hello-lib"],
)

java_library(
    name = "hello-lib",
    srcs = ["src/main/java/com/example/myproject/Greeter.java"],
    deps = [
        "@guava//jar",
    ],
)

java_test(
    name = "greeting-output",
    timeout = "short",
    srcs = ["src/test/java/com/example/myproject/TestHello.java"],
    test_class = "com.example.myproject.TestHello",
    deps = [
        ":hello-lib",
    ],
)
