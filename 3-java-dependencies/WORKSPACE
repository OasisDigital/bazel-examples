workspace(name = "java_dependencies")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# "New" Java support

http_archive(
    name = "rules_java",
    sha256 = "220b87d8cfabd22d1c6d8e3cdb4249abd4c93dcc152e0667db061fb1b957ee68",
    url = "https://github.com/bazelbuild/rules_java/releases/download/0.1.1/rules_java-0.1.1.tar.gz",
)

load("@rules_java//java:repositories.bzl", "rules_java_dependencies", "rules_java_toolchains")

rules_java_dependencies()

rules_java_toolchains()

# Bazel-managed JDK:

http_archive(
    name = "jdk15_linux",
    build_file = "@local_jdk//:BUILD.bazel",
    sha256 = "fff7500fc8ef63e298039087a9b7eb816af2f8bc90e3d7a8eaa950152660eff8",
    strip_prefix = "zulu15.36.13-ca-jdk15.0.5-linux_x64",
    urls = [
        "https://cdn.azul.com/zulu/bin/zulu15.36.13-ca-jdk15.0.5-linux_x64.tar.gz",
    ],
)

http_archive(
    name = "jdk15_macos",
    build_file = "@local_jdk//:BUILD.bazel",
    sha256 = "e89e4b1ad499b59bfc74edef0975654a4033cdb9887a646c98cb35f41de72c06",
    strip_prefix = "zulu15.36.13-ca-jdk15.0.5-macosx_x64",
    urls = [
        "https://cdn.azul.com/zulu/bin/zulu15.36.13-ca-jdk15.0.5-macosx_x64.tar.gz",
    ],
)

http_archive(
    name = "jdk15_windows",
    build_file = "@local_jdk//:BUILD.bazel",
    sha256 = "9c607ccd3817dd63d514adf8e66ceedba951a1b7154c62ba3f18e02fe7b8993b",
    strip_prefix = "zulu15.36.13-ca-jdk15.0.5-win_x64",
    urls = [
        "https://cdn.azul.com/zulu/bin/zulu15.36.13-ca-jdk15.0.5-win_x64.zip",
    ],
)

# Official Bazel tools to get Maven repo dependencies; there are other
# unofficial tools also.

RULES_JVM_EXTERNAL_TAG = "4.1"

RULES_JVM_EXTERNAL_SHA = "f36441aa876c4f6427bfb2d1f2d723b48e9d930b62662bf723ddfb8fc80f0140"

http_archive(
    name = "rules_jvm_external",
    sha256 = RULES_JVM_EXTERNAL_SHA,
    strip_prefix = "rules_jvm_external-%s" % RULES_JVM_EXTERNAL_TAG,
    url = "https://github.com/bazelbuild/rules_jvm_external/archive/%s.zip" % RULES_JVM_EXTERNAL_TAG,
)

load("@rules_jvm_external//:defs.bzl", "maven_install")

maven_install(
    artifacts = [
        "junit:junit:4.13.2",
    ],
    maven_install_json = "//:maven_install.json",
    repositories = [
        "https://jcenter.bintray.com/",
        "https://repo1.maven.org/maven2",
    ],
)

# Pinning is both safer (like an NPM package-lock) and avoids
# the spurious use of an OS-installed JVM.

load("@maven//:defs.bzl", "pinned_maven_install")

pinned_maven_install(
    # name = "maven",
)

# Initial pin:
# bazel run @maven//:pin

# Update or fill in incomplete pins
# bazel run @unpinned_maven//:pin

# <groupId>com.google.guava</groupId>
# <artifactId>guava</artifactId>
# <version>28.1-jre</version>
